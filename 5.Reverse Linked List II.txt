/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */


class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n)
    {
        ListNode curr = head;
        ListNode prevhead = head;
        if(m == n)
        {
            return head;
        }
        int count = 1;
        while(curr != null && count < m)
        {
            prevhead = curr;
            curr = curr.next;  
            count++;
        }
        ListNode currNext = curr, prev = null, nextNode = null;
       while(currNext != null && count <= n)
       {
           nextNode = currNext.next;
           currNext.next = prev;
           prev = currNext;
           currNext = nextNode;
           count++;
       }
        if(m == 1)
        {
            head = prev;
        }
        prevhead.next = prev;
        curr.next = currNext;
        return head;
    }
}
